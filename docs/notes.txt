We want to decouple representation with computation

std::reference_wrapper<Tensor> vs Tensor* ? 

Future Tensor ideas:
    
    std::vector<Tensor*> source; // dependencies of current Tensor
    Op op; // operation that formed this Tensor


Should buffers be completely decoupled from Tensors?
    idea here may be to have pool of buffers, build tensor/compute dependencies,
    then select which buffers to perform compute on. (explore this later...)


must support bf16


How to make git run gtest tests on push / commit? Is this possible?

smart pointer to wrap view objects? currently no user defined destructor, could simplify copy/move

clean up tensor::eye and write test for it
